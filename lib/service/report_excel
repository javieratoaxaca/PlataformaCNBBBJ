import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:excel/excel.dart';
import 'package:path_provider/path_provider.dart';
import 'dart:io';
import 'dart:typed_data';
import 'dart:html' as html;

Future<void> generarExcelCursosCompletados() async {
  FirebaseFirestore firestore = FirebaseFirestore.instance;

  // Obtener documentos de CursosCompletados
  QuerySnapshot cursosCompletadosSnapshot =
      await firestore.collection('CursosCompletados').get();

  // Crear una instancia de Excel
  var excel = Excel.createExcel();
  Sheet sheetObject = excel['Cursos Completados'];

  // Agregar encabezados
sheetObject.appendRow([
  TextCellValue('UID'),
  TextCellValue('Curso ID'),
  TextCellValue('Nombre del Curso'),
  TextCellValue('Trimestre'),
  TextCellValue('Dependencia'),
  TextCellValue('Fecha Completado')
]);


  // Recorrer los documentos de CursosCompletados
  for (var doc in cursosCompletadosSnapshot.docs) {
    String uid = doc['uid']; 
    List<String> idCursos = List<String>.from(doc['IdCursosCompletados']);
    List<String> fechasCursos = (doc['FechaCursoCompletado'] as List)
    .map((fecha) => (fecha as Timestamp).toDate().toIso8601String())
    .toList();


    for (int i = 0; i < idCursos.length; i++) {
      String cursoId = idCursos[i];
      String fechaCurso = fechasCursos[i];

      // Obtener datos del curso desde la colecciÃ³n 'Cursos'
      DocumentSnapshot cursoSnapshot =
          await firestore.collection('Cursos').doc(cursoId).get();

      if (cursoSnapshot.exists) {
        String nombreCurso = cursoSnapshot['NombreCurso'] ?? 'Desconocido';
        String trimestre = cursoSnapshot['Trimestre'] ?? '0';
        String dependencia = cursoSnapshot['Dependencia'] ?? 'S/D';



        // Agregar fila al Excel
sheetObject.appendRow([
  TextCellValue(uid),
  TextCellValue(cursoId),
  TextCellValue(nombreCurso),
  TextCellValue(trimestre),
  TextCellValue(dependencia),
  TextCellValue(fechaCurso)
]);

      }
    }
  }

  // Guardar y abrir el archivo
  await guardarYAbrirExcel(excel);
}

Future<void> guardarYAbrirExcel(Excel excel) async {
  var bytes = excel.encode();
  if (bytes == null) return;

  Uint8List uint8List = Uint8List.fromList(bytes);
  final blob = html.Blob([uint8List]);
  final url = html.Url.createObjectUrlFromBlob(blob);
  final anchor = html.AnchorElement(href: url)
    ..setAttribute("download", "CursosCompletados.xlsx")
    ..click();

  html.Url.revokeObjectUrl(url);
  print('ðŸ“‚ Archivo descargado exitosamente.');
}

